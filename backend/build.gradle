plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "org.sonarqube" version "5.1.0.4882"
}

group = 'com.luckycookie'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // tmap api 호출
    implementation 'org.springframework.boot:spring-boot-starter-webflux'


    // P6Spy 의존성 추가
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1")

    // AWS S3 의존성 추가
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4'

    // JWT 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    //JSONObject
    implementation 'org.json:json:20240303'

    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'org.apache.commons:commons-lang3:3.16.0'

    //log 모니터링
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(generated)
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += "$projectDir/build/generated"
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "crewin_backend"
    }
}